package torneo_futbal;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;

public class SistemaRegistro {
	
	private List<Usuario> usuariosRegistrados;

	public SistemaRegistro() {
	    usuariosRegistrados = new ArrayList<>();
	}
	
	public void iniciarRegistro() {
        String nombre = JOptionPane.showInputDialog("Ingrese su nombre:");
        String apellido = JOptionPane.showInputDialog("Ingrese su apellido:");
        String email = JOptionPane.showInputDialog("Ingrese su correo electrónico:");

        if (emailExiste(email)) {
            JOptionPane.showMessageDialog(null, "Este correo ya está registrado.");
            return;
        }
     // Если email уникален, предлагаем выбрать роль
        String rolSeleccionado = seleccionarRol();

        // Если роль выбрана, создаем нового пользователя
        if (rolSeleccionado != null) {
            Usuario nuevoUsuario = new Usuario(nombre, apellido, email, rolSeleccionado);
            usuariosRegistrados.add(nuevoUsuario); // Добавляем в список зарегистрированных пользователей

            // Показываем сообщение о регистрации
            JOptionPane.showMessageDialog(null, "¡Te has registrado con éxito como: " + rolSeleccionado + "!");

            // После регистрации показываем соответствующее меню в зависимости от роли
            mostrarMenu(rolSeleccionado);
        }
    }

    // Проверка, существует ли email в списке зарегистрированных пользователей
    private boolean emailExiste(String email) {
        for (Usuario usuario : usuariosRegistrados) {
            if (usuario.getEmail().equals(email)) {
                return true; // Если email найден, возвращаем true
            }
        }
        return false; // Если email не найден, возвращаем false
    }

    // Метод для выбора роли пользователя
    private String seleccionarRol() {
        // Список ролей
        String[] opcionesRol = {
            "Administrador AFA",
            "Administrador del club",
            "Socio del club",
            "Público general"
        };

        // Формируем строку с номерами ролей для отображения пользователю
        String mensaje = "Seleccione su rol (ingrese el número correspondiente):\n";
        for (int i = 0; i < opcionesRol.length; i++) {
            mensaje += (i + 1) + ". " + opcionesRol[i] + "\n";
        }

        // Показываем диалог для ввода номера роли
        String input = JOptionPane.showInputDialog(null, mensaje, "Selección de rol", JOptionPane.QUESTION_MESSAGE);

        // Проверяем, что пользователь ввёл число
        if (input != null && !input.isEmpty()) {
            try {
                int seleccion = Integer.parseInt(input); // Преобразуем в число

                // Используем switch-case для обработки выбора
                switch (seleccion) {
                    case 1:
                        return opcionesRol[0]; // "Administrador AFA"
                    case 2:
                        return opcionesRol[1]; // "Administrador de club"
                    case 3:
                        return opcionesRol[2]; // "Socio del club"
                    case 4:
                        return opcionesRol[3]; // "Público general"
                    default:
                        JOptionPane.showMessageDialog(null, "Número inválido. Por favor, seleccione un número válido.");
                        return null; // Возвращаем null, если выбрано некорректное значение
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Entrada inválida. Por favor, ingrese un número.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se seleccionó ningún rol.");
        }
        return null; // Возвращаем null, если роль не выбрана
    }

    // Метод для отображения меню в зависимости от роли
    private void mostrarMenu(String rolSeleccionado) {
        String menu = "";

        // Меню для разных ролей
        switch (rolSeleccionado) {
            case "Administrador AFA":
                menu = "Menú Administrador AFA:\n1. Gestionar clubes\n2. Ver estadísticas\n3. Salir";
                break;
            case "Administrador de club":
                menu = "Menú Administrador de club:\n1. Gestionar jugadores\n2. Ver partidos\n3. Salir";
                break;
            case "Socio del club":
                menu = "Menú Socio del club:\n1. Ver partidos\n2. Comprar entradas\n3. Salir";
                break;
            case "Público general":
                menu = "Menú Público general:\n1. Ver próximos partidos\n2. Ver resultados\n3. Salir";
                break;
            default:
                menu = "Menú no disponible.";
                break;
        }

        // Показываем соответствующее меню для выбранной роли
        String opcion = JOptionPane.showInputDialog(null, menu, "Menú", JOptionPane.QUESTION_MESSAGE);

        // В зависимости от выбора можно продолжить взаимодействие или завершить программу
        if (opcion != null && !opcion.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Has elegido: " + opcion);
        } else {
            JOptionPane.showMessageDialog(null, "Has salido del menú.");
        }
    }

    public static void main(String[] args) {
        SistemaRegistro sistema = new SistemaRegistro();
        sistema.iniciarRegistro(); // Начинаем регистрацию
    }

}
