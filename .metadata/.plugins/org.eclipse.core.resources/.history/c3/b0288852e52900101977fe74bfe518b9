package torneo_futbal;

import java.io.File;
import java.util.List;

import javax.swing.JOptionPane;

public class AdminClub extends Administrador {
	
	private Club club;

    public AdminClub(String nombre, String apellido, String email) {
        super(nombre, apellido, email, "Administrador del Club");
    }

    @Override
    public void mostrarMenu() {
        boolean salir = false;

        while (!salir) {
            String[] opciones = {
                    "Registrar club",
                    "Registrar estadio",
                    "Registrar equipo",
                    "Registrar director técnico",
                    "Gestionar disciplinas y actividades",
                    "Reservar/administrar instalaciones",
                    "Agregar categorías de entradas",
                    "Vender entradas",
                    "Administrar beneficios y premios",
                    "Salir"
            };

            String seleccion = (String) JOptionPane.showInputDialog(
                    null,
                    "Menú Administrador de Club",
                    "Opciones",
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    opciones,
                    opciones[0]
            );

            if (seleccion == null || seleccion.equals("Salir")) {
                salir = true;
            } else {
            	procesarOpcion(seleccion);
            }
        }
    }
    
    private void procesarOpcion(String seleccion) {
        switch (seleccion) {
            case "Registrar club" -> registrarClub();
            case "Registrar estadio" -> registrarEstadio();
            case "Registrar equipo" -> registrarEquipo();
            // Otros opciones van a ser agregadas despues
            
            default -> JOptionPane.showMessageDialog(null,
                    "Has seleccionado: " + seleccion + "\n(Función aún no implementada)");
        }
    }
    
    private void registrarClub() {
        if (club != null) {
            JOptionPane.showMessageDialog(null, "Ya tienes un club registrado:\n" + club);
            return;
        }

        String nombre = JOptionPane.showInputDialog("Ingrese el nombre del club:");
        String direccion = JOptionPane.showInputDialog("Ingrese la dirección del club:");

        if (nombre == null || direccion == null || nombre.isBlank() || direccion.isBlank()) {
            JOptionPane.showMessageDialog(null, "Datos inválidos. Por favor, intenta nuevamente");
            return;
        }

        club = new Club(nombre, direccion);
        JOptionPane.showMessageDialog(null, "Club registrado exitosamente:\n" + club);
    }
    
    private void registrarEstadio() {
        if (club == null) {
            JOptionPane.showMessageDialog(null, "Primero debe registrar un club.");
            return;
        }

        String nombre = JOptionPane.showInputDialog("Ingrese el nombre del estadio:");
        String direccion = JOptionPane.showInputDialog("Ingrese la dirección del estadio:");
        String capacidadStr = JOptionPane.showInputDialog("Ingrese la capacidad del estadio:");

        if (nombre == null || direccion == null || capacidadStr == null ||
            nombre.isBlank() || direccion.isBlank() || capacidadStr.isBlank()) {
            JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios.");
            return;
        }

        int capacidad = 0;
        try {
            capacidad = Integer.parseInt(capacidadStr); // Преобразуем строку в число
            if (capacidad <= 0) {
                JOptionPane.showMessageDialog(null, "La capacidad debe ser mayor que cero.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La capacidad debe ser un número válido.");
            return;
        }

        Estadio estadio = new Estadio(nombre, direccion, capacidad);
        club.agregarEstadio(estadio);
        JOptionPane.showMessageDialog(null, "Estadio registrado exitosamente:\n" + estadio);
    }
    
    private void registrarEquipo() {
        if (club == null) {
            JOptionPane.showMessageDialog(null, "Primero debe registrar un club.");
            return;
        }

        String nombreEquipo = JOptionPane.showInputDialog("Ingrese el nombre del equipo:");
        String categoria = JOptionPane.showInputDialog("Ingrese la categoría del equipo (ej: Primera, Juvenil, etc):");
        String colores = JOptionPane.showInputDialog("Ingrese los colores del equipo:");

        
        String nombreEscudo = JOptionPane.showInputDialog("Ingrese el nombre del archivo del escudo del equipo (ej: escudo1.png):");

        
        String rutaEscudo = "./imagenes/escudos/" + nombreEscudo;

        
        File archivoEscudo = new File(rutaEscudo);
        if (!archivoEscudo.exists()) {
            JOptionPane.showMessageDialog(null, "El archivo del escudo no existe en la ruta especificada.");
            return;
        }

        // Выбор стадиона
        List<Estadio> estadios = club.getEstadios();
        if (estadios.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Primero debe registrar al menos un estadio.");
            return;
        }

        String[] nombresEstadios = new String[estadios.size()];

        for (int i = 0; i < estadios.size(); i++) {
            nombresEstadios[i] = estadios.get(i).getNombre(); 
        }


        String seleccion = (String) JOptionPane.showInputDialog(
                null,
                "Seleccione el estadio local:",
                "Estadio",
                JOptionPane.QUESTION_MESSAGE,
                null,
                nombresEstadios,
                nombresEstadios[0]
        );

        if (seleccion == null) {
            JOptionPane.showMessageDialog(null, "No se seleccionó ningún estadio.");
            return;
        }

    
        Estadio estadioSeleccionado = null;
        for (Estadio estadio : estadios) {
            if (estadio.getNombre().equals(seleccion)) {
                estadioSeleccionado = estadio;
                break;
            }
        }

        Equipo equipo = new Equipo(nombreEquipo, categoria, colores, rutaEscudo, estadioSeleccionado);
        club.agregarEquipo(equipo);

        JOptionPane.showMessageDialog(null, "Equipo registrado exitosamente:\n" + equipo);
    
    }



}
